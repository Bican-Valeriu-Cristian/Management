@model Management.Models.Task

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Task</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Description</label>
                <input asp-for="ToDo" class="form-control" />
                <span asp-validation-for="ToDo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Critical" class="control-label"></label>
                <input asp-for="Critical" class="form-control" />
                <span asp-validation-for="Critical" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">FinishTime</label>
                <input asp-for="DateTime" class="form-control" />
                <span asp-validation-for="DateTime" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary btn-lg px-5">Save</button>
        </form>
    </div>
    <div class="col-md-8 d-flex align-items-end justify-content-end">
        <a asp-action="Index" class="btn btn-secondary btn-lg px-5">Back to List</a>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
